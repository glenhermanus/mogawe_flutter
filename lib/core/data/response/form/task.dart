import 'dart:convert';

Task taskFromJson(String str) => Task.fromJson(json.decode(str));

String taskToJson(Task data) => json.encode(data.toJson());

class Task {
  Task({
    required this.id,
    required this.uuid,
    required this.uuidMogawers,
    required this.idMogawers,
    required this.uuidQueue,
    required this.statusTask,
    required this.statusNotes,
    required this.groupTask,
    required this.sequence,
    required this.limit,
    required this.isPinned,
    required this.isStarting,
    required this.startDate,
    required this.receivedDate,
    required this.expiredDate,
    required this.reminderDate,
    required this.assignmentType,
    required this.uuidJob,
    required this.jobName,
    required this.jobDescription,
    required this.uuidJobType,
    required this.uuidLocationType,
    required this.uuidLocation,
    required this.uuidLocationLevel,
    required this.uuidProject,
    required this.projectName,
    required this.projectDescription,
    required this.uuidBatch,
    required this.batchName,
    required this.latitude,
    required this.longitude,
    required this.name,
    required this.locationName,
    required this.locationAddress,
    required this.locationLevel,
    required this.jobTypeName,
    required this.tutorial,
    required this.code,
    required this.description,
    required this.brief,
    required this.howTo,
    required this.minimumLevel,
    required this.jobLimit,
    required this.fee,
    required this.type,
    required this.isScreening,
    required this.isDirect,
    required this.target,
    required this.points,
    required this.duration,
    required this.schedule,
    required this.isPublished,
    required this.isAutoApproved,
    required this.locationDescription,
    required this.isQcNeeded,
    required this.isHaveArea,
    required this.jobPicture,
    required this.jobBanner,
    required this.jobColor,
    required this.jobTextColor,
    required this.radius,
    required this.defaulLimit,
    required this.postMessage,
    required this.resultCount,
    required this.mogawersCode,
    required this.fullName,
    required this.email,
    required this.jobId,
    required this.category,
    required this.isDisplayable,
    required this.isAssigned,
    required this.jobActions,
    required this.certificates,
    required this.jobTimes,
    required this.endDate,
    required this.uuidOrder,
    required this.uuidTaskOrder,
    required this.uuidTaskOrderJob,
    required this.idTask,
  });

  dynamic id;
  String uuid;
  dynamic uuidMogawers;
  int idMogawers;
  dynamic uuidQueue;
  String statusTask;
  dynamic statusNotes;
  dynamic groupTask;
  dynamic sequence;
  dynamic limit;
  dynamic isPinned;
  dynamic isStarting;
  int startDate;
  dynamic receivedDate;
  dynamic expiredDate;
  dynamic reminderDate;
  dynamic assignmentType;
  dynamic uuidJob;
  dynamic jobName;
  dynamic jobDescription;
  dynamic uuidJobType;
  dynamic uuidLocationType;
  dynamic uuidLocation;
  dynamic uuidLocationLevel;
  dynamic uuidProject;
  dynamic projectName;
  dynamic projectDescription;
  dynamic uuidBatch;
  dynamic batchName;
  dynamic latitude;
  dynamic longitude;
  dynamic name;
  dynamic locationName;
  dynamic locationAddress;
  dynamic locationLevel;
  dynamic jobTypeName;
  dynamic tutorial;
  dynamic code;
  dynamic description;
  dynamic brief;
  dynamic howTo;
  dynamic minimumLevel;
  dynamic jobLimit;
  dynamic fee;
  dynamic type;
  dynamic isScreening;
  dynamic isDirect;
  dynamic target;
  dynamic points;
  dynamic duration;
  dynamic schedule;
  dynamic isPublished;
  dynamic isAutoApproved;
  dynamic locationDescription;
  dynamic isQcNeeded;
  dynamic isHaveArea;
  dynamic jobPicture;
  dynamic jobBanner;
  dynamic jobColor;
  dynamic jobTextColor;
  dynamic radius;
  dynamic defaulLimit;
  dynamic postMessage;
  dynamic resultCount;
  dynamic mogawersCode;
  dynamic fullName;
  dynamic email;
  dynamic jobId;
  dynamic category;
  dynamic isDisplayable;
  bool isAssigned;
  dynamic jobActions;
  dynamic certificates;
  dynamic jobTimes;
  dynamic endDate;
  dynamic uuidOrder;
  dynamic uuidTaskOrder;
  dynamic uuidTaskOrderJob;
  String idTask;

  factory Task.fromJson(Map<String, dynamic> json) => Task(
    id: json["id"],
    uuid: json["uuid"] == null ? null : json["uuid"],
    uuidMogawers: json["uuidMogawers"],
    idMogawers: json["idMogawers"] == null ? null : json["idMogawers"],
    uuidQueue: json["uuidQueue"],
    statusTask: json["statusTask"] == null ? null : json["statusTask"],
    statusNotes: json["statusNotes"],
    groupTask: json["groupTask"],
    sequence: json["sequence"],
    limit: json["limit"],
    isPinned: json["isPinned"],
    isStarting: json["isStarting"],
    startDate: json["startDate"] == null ? null : json["startDate"],
    receivedDate: json["receivedDate"],
    expiredDate: json["expiredDate"],
    reminderDate: json["reminderDate"],
    assignmentType: json["assignmentType"],
    uuidJob: json["uuidJob"],
    jobName: json["jobName"],
    jobDescription: json["jobDescription"],
    uuidJobType: json["uuidJobType"],
    uuidLocationType: json["uuidLocationType"],
    uuidLocation: json["uuidLocation"],
    uuidLocationLevel: json["uuidLocationLevel"],
    uuidProject: json["uuidProject"],
    projectName: json["projectName"],
    projectDescription: json["projectDescription"],
    uuidBatch: json["uuidBatch"],
    batchName: json["batchName"],
    latitude: json["latitude"],
    longitude: json["longitude"],
    name: json["name"],
    locationName: json["locationName"],
    locationAddress: json["locationAddress"],
    locationLevel: json["locationLevel"],
    jobTypeName: json["jobTypeName"],
    tutorial: json["tutorial"],
    code: json["code"],
    description: json["description"],
    brief: json["brief"],
    howTo: json["howTo"],
    minimumLevel: json["minimumLevel"],
    jobLimit: json["jobLimit"],
    fee: json["fee"],
    type: json["type"],
    isScreening: json["isScreening"],
    isDirect: json["isDirect"],
    target: json["target"],
    points: json["points"],
    duration: json["duration"],
    schedule: json["schedule"],
    isPublished: json["isPublished"],
    isAutoApproved: json["isAutoApproved"],
    locationDescription: json["locationDescription"],
    isQcNeeded: json["isQcNeeded"],
    isHaveArea: json["isHaveArea"],
    jobPicture: json["jobPicture"],
    jobBanner: json["jobBanner"],
    jobColor: json["jobColor"],
    jobTextColor: json["jobTextColor"],
    radius: json["radius"],
    defaulLimit: json["defaulLimit"],
    postMessage: json["postMessage"],
    resultCount: json["resultCount"],
    mogawersCode: json["mogawersCode"],
    fullName: json["fullName"],
    email: json["email"],
    jobId: json["jobId"],
    category: json["category"],
    isDisplayable: json["isDisplayable"],
    isAssigned: json["isAssigned"] == null ? null : json["isAssigned"],
    jobActions: json["jobActions"],
    certificates: json["certificates"],
    jobTimes: json["jobTimes"],
    endDate: json["endDate"],
    uuidOrder: json["uuidOrder"],
    uuidTaskOrder: json["uuidTaskOrder"],
    uuidTaskOrderJob: json["uuidTaskOrderJob"],
    idTask: json["idTask"] == null ? null : json["idTask"],
  );

  Map<String, dynamic> toJson() => {
    "id": id,
    "uuid": uuid == null ? null : uuid,
    "uuidMogawers": uuidMogawers,
    "idMogawers": idMogawers == null ? null : idMogawers,
    "uuidQueue": uuidQueue,
    "statusTask": statusTask == null ? null : statusTask,
    "statusNotes": statusNotes,
    "groupTask": groupTask,
    "sequence": sequence,
    "limit": limit,
    "isPinned": isPinned,
    "isStarting": isStarting,
    "startDate": startDate == null ? null : startDate,
    "receivedDate": receivedDate,
    "expiredDate": expiredDate,
    "reminderDate": reminderDate,
    "assignmentType": assignmentType,
    "uuidJob": uuidJob,
    "jobName": jobName,
    "jobDescription": jobDescription,
    "uuidJobType": uuidJobType,
    "uuidLocationType": uuidLocationType,
    "uuidLocation": uuidLocation,
    "uuidLocationLevel": uuidLocationLevel,
    "uuidProject": uuidProject,
    "projectName": projectName,
    "projectDescription": projectDescription,
    "uuidBatch": uuidBatch,
    "batchName": batchName,
    "latitude": latitude,
    "longitude": longitude,
    "name": name,
    "locationName": locationName,
    "locationAddress": locationAddress,
    "locationLevel": locationLevel,
    "jobTypeName": jobTypeName,
    "tutorial": tutorial,
    "code": code,
    "description": description,
    "brief": brief,
    "howTo": howTo,
    "minimumLevel": minimumLevel,
    "jobLimit": jobLimit,
    "fee": fee,
    "type": type,
    "isScreening": isScreening,
    "isDirect": isDirect,
    "target": target,
    "points": points,
    "duration": duration,
    "schedule": schedule,
    "isPublished": isPublished,
    "isAutoApproved": isAutoApproved,
    "locationDescription": locationDescription,
    "isQcNeeded": isQcNeeded,
    "isHaveArea": isHaveArea,
    "jobPicture": jobPicture,
    "jobBanner": jobBanner,
    "jobColor": jobColor,
    "jobTextColor": jobTextColor,
    "radius": radius,
    "defaulLimit": defaulLimit,
    "postMessage": postMessage,
    "resultCount": resultCount,
    "mogawersCode": mogawersCode,
    "fullName": fullName,
    "email": email,
    "jobId": jobId,
    "category": category,
    "isDisplayable": isDisplayable,
    "isAssigned": isAssigned == null ? null : isAssigned,
    "jobActions": jobActions,
    "certificates": certificates,
    "jobTimes": jobTimes,
    "endDate": endDate,
    "uuidOrder": uuidOrder,
    "uuidTaskOrder": uuidTaskOrder,
    "uuidTaskOrderJob": uuidTaskOrderJob,
    "idTask": idTask == null ? null : idTask,
  };
}
